{"version":3,"sources":["views/Logistik/PenerimaanBarang/BuatPenerimaanBarang.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Table.js"],"names":["BuatPenerimaanBarang","props","state","nama","purchase_id","jumlah","modalIsOpen","harga","sewa","this","setState","data","getPurchaseOrdersQuery","loading","purchaseOrders","map","order","key","id","value","kode","getPenerimaanBarangsQuery","tanggal","penerimaanBarangs","request","akun","karyawan","className","md","row","htmlFor","type","name","disabled","purchaseOrder","vendor","hover","bordered","striped","responsive","size","align","listItemPurchaseOrder","item","nama_barang","satuan","jumlah_barang","to","onClick","Submit","bind","jenis_usaha","color","pers_id","jumlah1","getPersediaanBarangsQuery","persediaanBarangs","stock","barang","updateJumlahPersediaanBarang","variables","barang_id","parseInt","refetchQueries","query","id1","getBarangsQuery","barangs","bar","addPersediaanBarang","status","getAllInventarisQuery","inv_id","allInventaris","inv","updateJumlahInventaris","addInventaris","jumlah_dipakai","jumlah_diperbaiki","updateStatusDonePurchaseOrder","match","params","updateStatusListRequestOnOrder","order_id","getListRequestsQuery","Swal","fire","position","icon","title","showConfirmButton","displayNewPenerimaanbarang","displayPurchaseOrderDetail","Component","compose","graphql","getPurchaseOrderQuery","options","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","CardHeader","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","bool","borderless","dark","oneOfType","responsiveTag","innerRef","func","Table","ResponsiveTag","table","ref","responsiveClassName"],"mappings":"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","file":"static/js/31.8d7f42da.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport * as compose from 'lodash.flowright';\r\nimport Swal from 'sweetalert2';\r\nimport {getPurchaseOrderQuery, getAllInventarisQuery, updateJumlahInventaris, getPurchaseOrdersQuery, getPenerimaanBarangsQuery, getPersediaanBarangsQuery, getListRequestsQuery, getBarangsQuery, addPersediaanBarang, updateJumlahPersediaanBarang, updateStatusListRequestOnOrder, updateStatusDonePurchaseOrder} from '../queries/queries';\r\nimport { \r\n  Form,\r\n  Card, \r\n  CardBody, \r\n  CardHeader, \r\n  Col, \r\n  Row, \r\n  Table,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nclass BuatPenerimaanBarang extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nama:'',\r\n      purchase_id:'',\r\n      jumlah: 0,\r\n      modalIsOpen: false,  \r\n      harga: 0,\r\n      sewa: 0,\r\n    };\r\n  }\r\n\r\n \r\n  toggleModal(){\r\n    this.setState({\r\n      modalIsOpen: ! this.state.modalIsOpen\r\n    });\r\n  }\r\n\r\n  displayPurchaseOrder(){\r\n    var data = this.props.getPurchaseOrdersQuery;\r\n    if(data.loading){\r\n      return (<div>Loading order...</div>);\r\n    } else {\r\n      return data.purchaseOrders.map(order => {\r\n          return(\r\n            <option key={order.id} value={order.id}>{order.kode}</option>\r\n          )\r\n      });\r\n    }\r\n  }\r\n  displayNewPenerimaanbarang(){\r\n    var data = this.props.getPenerimaanBarangsQuery;\r\n    var tanggal = '';\r\n    var kode='';\r\n    var nama='';\r\n    data.penerimaanBarangs.map(request => {\r\n      return(\r\n        tanggal = request.tanggal,\r\n        kode = request.kode,\r\n        nama = request.akun.karyawan.nama\r\n      );\r\n    });\r\n    return(\r\n        <CardBody>\r\n        <Form className=\"form-horizontal\">\r\n          <Row> \r\n            <Col md=\"4\">\r\n              <FormGroup row>\r\n                <Col md=\"6\">\r\n                  <Label htmlFor=\"name\">Kode Penerimaan Barang</Label>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={kode} disabled></Input> \r\n                </Col>\r\n              </FormGroup>\r\n            </Col>  \r\n            <Col md=\"4\">\r\n              <FormGroup row>\r\n              <Col md=\"3\">\r\n                  <Label htmlFor=\"name\">Tanggal</Label>\r\n                </Col>\r\n                <Col md=\"9\">\r\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={tanggal} disabled></Input> \r\n                </Col> \r\n              </FormGroup>\r\n            </Col>  \r\n            <Col md=\"4\">\r\n              <FormGroup row>\r\n              <Col md=\"3\">\r\n                  <Label htmlFor=\"name\">Penerima</Label>\r\n                </Col>\r\n                <Col md=\"9\">\r\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={nama} disabled></Input> \r\n                </Col> \r\n              </FormGroup>\r\n            </Col>  \r\n          </Row>\r\n        </Form>\r\n        </CardBody>\r\n      \r\n    );\r\n  }\r\n\r\n  displayPurchaseOrderDetail(){\r\n    const {purchaseOrder} = this.props.data;\r\n    if(purchaseOrder){\r\n      return(\r\n        <CardBody>\r\n          <Form className=\"form-horizontal\">\r\n          <Row> \r\n            <Col md=\"4\">\r\n              <FormGroup row>\r\n                <Col md=\"6\">\r\n                  <Label htmlFor=\"name\">Kode Purchase Order</Label>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={purchaseOrder.kode} disabled></Input> \r\n                </Col>\r\n              </FormGroup>\r\n            </Col>  \r\n            <Col md=\"4\">\r\n              <FormGroup row>\r\n              <Col md=\"3\">\r\n                  <Label htmlFor=\"name\">Nama vendor</Label>\r\n                </Col>\r\n                <Col md=\"9\">\r\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={purchaseOrder.vendor.nama} disabled></Input> \r\n                </Col> \r\n              </FormGroup>\r\n            </Col>  \r\n          </Row>\r\n          \r\n        </Form>\r\n          <hr />\r\n          <Table hover bordered striped responsive size=\"sm\">\r\n            <thead align=\"center\">\r\n              <tr>\r\n                <th>Nama Barang</th>\r\n                <th>Satuan</th>\r\n                <th>Jumlah</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody align=\"center\">\r\n              {\r\n                purchaseOrder.listItemPurchaseOrder.map(item => {\r\n                  return(\r\n                    <tr key={item.id}>\r\n                      <td>{item.nama_barang}</td>\r\n                      <td>{item.satuan}</td>\r\n                      <td>{item.jumlah_barang}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n              }\r\n            </tbody>\r\n          </Table>\r\n          <div align=\"center\">\r\n            <Link to=\"/penerimaanBarang/penerimaanBarang\">\r\n                <Button onClick={this.Submit.bind(this, purchaseOrder.vendor.jenis_usaha)} color=\"primary\">Submit</Button>\r\n            </Link>\r\n          </div>\r\n        </CardBody>\r\n      )\r\n    }\r\n  }\r\n\r\n  Submit(jenis_usaha){\r\n    if(jenis_usaha !== 'Perkakas'){\r\n        const {purchaseOrder} = this.props.data; // eslint-disable-next-line\r\n        purchaseOrder.listItemPurchaseOrder.map(item => {\r\n            var pers_id = '';\r\n            var jumlah1=0;\r\n            var data = this.props.getPersediaanBarangsQuery; // eslint-disable-next-line\r\n            data.persediaanBarangs.map(stock => {\r\n                if (item.nama_barang === stock.barang.nama_barang){\r\n                    pers_id = stock.barang.id\r\n                    jumlah1 = stock.jumlah\r\n                }\r\n            });   \r\n            if(pers_id !== ''){\r\n                this.props.updateJumlahPersediaanBarang({\r\n                    variables:{\r\n                      barang_id: pers_id,\r\n                      jumlah: parseInt(item.jumlah_barang)+parseInt(jumlah1),\r\n                    },\r\n                    refetchQueries:[{query:getPersediaanBarangsQuery}],\r\n                });\r\n            } else {\r\n                var id1=''; // eslint-disable-next-line\r\n                var data = this.props.getBarangsQuery; // eslint-disable-next-line\r\n                data.barangs.map(bar => {\r\n                    if(item.nama_barang === bar.nama_barang){\r\n                        id1 = bar.id\r\n                    }\r\n                });\r\n                this.props.addPersediaanBarang({\r\n                    variables:{\r\n                      barang_id: id1,\r\n                      jumlah: parseInt(item.jumlah_barang),\r\n                      status: 'Available',\r\n                    },\r\n                    refetchQueries:[{query:getPersediaanBarangsQuery}],\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        const {purchaseOrder} = this.props.data; // eslint-disable-next-line\r\n        purchaseOrder.listItemPurchaseOrder.map( item => {\r\n            var data = this.props.getAllInventarisQuery;\r\n            var inv_id = '';\r\n            var jumlah1=0; // eslint-disable-next-line\r\n            data.allInventaris.map (inv => {\r\n                if (item.nama_barang === inv.barang.nama_barang){\r\n                    inv_id = inv.barang.id\r\n                    jumlah1 = inv.jumlah\r\n                }\r\n            });\r\n            if(inv_id !== ''){\r\n                this.props.updateJumlahInventaris({\r\n                    variables:{\r\n                      barang_id: inv_id,\r\n                      jumlah: parseInt(item.jumlah_barang)+parseInt(jumlah1),\r\n                    },\r\n                    refetchQueries:[{query:getAllInventarisQuery}],\r\n                });\r\n            } else {\r\n                var id1=''; // eslint-disable-next-line\r\n                var data = this.props.getBarangsQuery; // eslint-disable-next-line\r\n                data.barangs.map(bar => {\r\n                    if(item.nama_barang === bar.nama_barang){\r\n                        id1 = bar.id\r\n                    }\r\n                });\r\n                this.props.addInventaris({\r\n                    variables:{\r\n                      barang_id: id1,\r\n                      jumlah: parseInt(item.jumlah_barang),\r\n                      status: 'Available',\r\n                      jumlah_dipakai: 0,\r\n                      jumlah_diperbaiki: 0,\r\n                    },\r\n                    refetchQueries:[{query:getAllInventarisQuery}]\r\n                  });\r\n            }\r\n        });\r\n    }\r\n    this.props.updateStatusDonePurchaseOrder({\r\n        variables:{\r\n            id: this.props.match.params.id,\r\n            status: 'Done',\r\n          },\r\n          refetchQueries:[{query:getPurchaseOrdersQuery}],\r\n    });\r\n    this.props.updateStatusListRequestOnOrder({\r\n        variables:{\r\n            order_id: this.props.match.params.id,\r\n            status: 'Ready',\r\n          },\r\n          refetchQueries:[{query:getListRequestsQuery}],\r\n    });\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Penerimaan Barang Berhasil Disimpan',\r\n      showConfirmButton: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n           <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                <i className=\"fa fa-align-justify\"></i>Form Buat Penerimaan Barang\r\n                <Link to=\"/penerimaanBarang/penerimaanBarang\" className={'float-right mb-0'}>\r\n                  <Button color=\"danger\">\r\n                      Batal\r\n                  </Button>\r\n                </Link>\r\n              </CardHeader>\r\n              {this.displayNewPenerimaanbarang()}\r\n              {this.displayPurchaseOrderDetail()}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    graphql(getPurchaseOrderQuery, {\r\n        options:(props) => {\r\n          return{\r\n            variables:{\r\n              id: props.match.params.id\r\n            }\r\n          }\r\n        }\r\n      }),\r\n  graphql(getPenerimaanBarangsQuery, {name:\"getPenerimaanBarangsQuery\"}),\r\n  graphql(getPurchaseOrdersQuery, {name:\"getPurchaseOrdersQuery\"}),\r\n  graphql(getPersediaanBarangsQuery, {name:\"getPersediaanBarangsQuery\"}),\r\n  graphql(getListRequestsQuery, {name:\"getListRequestsQuery\"}),\r\n  graphql(getBarangsQuery, {name:\"getBarangsQuery\"}),\r\n  graphql(getAllInventarisQuery, {name:\"getAllInventarisQuery\"}),\r\n  graphql(addPersediaanBarang, {name:\"addPersediaanBarang\"}),\r\n  graphql(updateJumlahPersediaanBarang, {name:\"updateJumlahPersediaanBarang\"}),\r\n  graphql(updateJumlahInventaris, {name:\"updateJumlahInventaris\"}),\r\n  graphql(updateStatusListRequestOnOrder, {name:\"updateStatusListRequestOnOrder\"}),\r\n  graphql(updateStatusDonePurchaseOrder, {name:\"updateStatusDonePurchaseOrder\"}),\r\n  \r\n)(BuatPenerimaanBarang);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}