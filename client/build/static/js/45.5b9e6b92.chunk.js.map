{"version":3,"sources":["views/Logistik/PurchaseOrder/PurchaseOrder.js"],"names":["PurchaseOrder","props","loggedIn","localStorage","getItem","state","akun_id","data","this","getPurchaseOrdersQuery","no","loading","purchaseOrders","map","order","key","id","kode","vendor","nama","tanggal","status","to","color","size","className","addPurchaseOrderMutation","variables","getKodeBaru","Date","toLocaleDateString","tanggal_setuju","vendor_id","refetchQueries","query","history","push","nomor","onClick","addPurchaseOrder","bind","hover","bordered","striped","responsive","align","displayAllPurchaseOrder","previous","tag","active","next","Component","compose","graphql","name"],"mappings":"uRAOMA,E,kDACJ,WAAYC,GAAO,IAAD,sBAChB,cAAMA,GACN,IAEIC,GAAW,EAJC,OAKC,MAHDC,aAAaC,QAAQ,cAIjCF,GAAW,GAEf,EAAKG,MAAQ,CACXH,WACAI,QAASH,aAAaC,QAAQ,YAVhB,E,sEAchB,IAAIG,EAAOC,KAAKP,MAAMQ,uBAClBC,EAAK,EACT,OAAGH,EAAKI,aACN,EAEOJ,EAAKK,eAAeC,KAAI,SAAAC,GAE7B,OADAJ,IAEE,wBAAIK,IAAKD,EAAME,IACb,4BAAKN,GACL,4BAAKI,EAAMG,MACX,4BAAKH,EAAMI,OAAOC,MAClB,4BAAKL,EAAMM,SACX,4BAAKN,EAAMO,QACX,4BACE,kBAAC,OAAD,CAAMC,GAAE,6CAAwCR,EAAME,KACtD,kBAAC,IAAD,CAAQO,MAAM,UAAUC,KAAK,MAC3B,uBAAGC,UAAU,wB,yCAWzBjB,KAAKP,MAAMyB,yBAAyB,CAClCC,UAAU,CACRV,KAAMT,KAAKoB,cACXR,SAAS,IAAIS,MAAOC,qBACpBT,OAAQ,kBACRU,eAAgB,GAChBzB,QAASE,KAAKH,MAAMC,QACpB0B,UAAU,4BAEZC,eAAe,CAAC,CAACC,MAAMzB,QAEzBD,KAAKP,MAAMkC,QAAQC,KAAK,sC,oCAIxB,IAAInB,EAAO,IACPoB,EAAQ,EAYZ,OAXW7B,KAAKP,MAAMQ,uBACjBG,eAAeC,KAAI,SAAAC,GACpBuB,OAGFpB,EADCoB,EAAQ,GACFpB,EAAK,KAAKoB,EACTA,GAAS,IAAMA,EAAQ,IACxBpB,EAAK,IAAIoB,EAETpB,EAAK,GAAGoB,I,+BAKjB,OAA2B,IAAxB7B,KAAKH,MAAMH,SACL,kBAAC,IAAD,CAAUoB,GAAG,WAGpB,yBAAKG,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,IAAD,8BAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQF,MAAM,UAAUC,KAAK,KAAMC,UAAW,mBAAoBa,QAAS9B,KAAK+B,iBAAiBC,KAAKhC,OAClG,uBAAGiB,UAAU,eADjB,2BAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgB,OAAK,EAACC,UAAQ,EAACC,SAAO,EAACC,YAAU,EAACpB,KAAK,MAC5C,2BAAOqB,MAAM,UACb,4BACE,kCACA,oCACA,2CACA,uCACA,sCACA,sCAGF,2BAAOA,MAAM,UACZrC,KAAKsC,4BAGR,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAgBC,UAAQ,EAACC,IAAI,UAA7B,SAChB,kBAAC,IAAD,CAAgBC,QAAM,GACpB,kBAAC,IAAD,CAAgBD,IAAI,UAApB,MAEF,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAgBA,IAAI,UAApB,MAChB,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAgBA,IAAI,UAApB,MAChB,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAgBA,IAAI,UAApB,MAChB,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAgBE,MAAI,EAACF,IAAI,UAAzB,oB,GAvHRG,aAoIbC,YACbC,YAAQ5C,IAAwB,CAAC6C,KAAK,2BACtCD,YAAQ3B,IAA0B,CAAC4B,KAAK,6BAF3BF,CAGZpD","file":"static/js/45.5b9e6b92.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, Redirect} from 'react-router-dom';\r\nimport * as compose from 'lodash.flowright';\r\nimport {graphql} from 'react-apollo';\r\nimport { getPurchaseOrdersQuery, addPurchaseOrderMutation } from '../queries/queries';\r\nimport { Card, CardBody, CardHeader, Col, Pagination, PaginationItem,Button, PaginationLink, Row, Table } from 'reactstrap';\r\n\r\nclass PurchaseOrder extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    const username= localStorage.getItem(\"username\")\r\n\r\n    let loggedIn = true \r\n      if(username == null){\r\n        loggedIn = false\r\n      }\r\n    this.state = {\r\n      loggedIn,\r\n      akun_id: localStorage.getItem(\"user_id\"),\r\n      }\r\n  }\r\n  displayAllPurchaseOrder(){\r\n    var data = this.props.getPurchaseOrdersQuery;\r\n    var no = 0;\r\n    if(data.loading){\r\n      return\r\n    } else {\r\n      return data.purchaseOrders.map(order => {\r\n        no++;\r\n        return(\r\n          <tr key={order.id}>\r\n            <td>{no}</td>\r\n            <td>{order.kode}</td>\r\n            <td>{order.vendor.nama}</td>\r\n            <td>{order.tanggal}</td>\r\n            <td>{order.status}</td>\r\n            <td>\r\n              <Link to={`/purchaseOrder/detailPurchaseOrder/${order.id}`}>\r\n              <Button color=\"primary\" size=\"sm\">\r\n                <i className=\"fa fa-file\"></i>\r\n                </Button>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  addPurchaseOrder(){\r\n    this.props.addPurchaseOrderMutation({\r\n      variables:{\r\n        kode: this.getKodeBaru(),\r\n        tanggal: new Date().toLocaleDateString(),\r\n        status: 'Belum Disetujui',\r\n        tanggal_setuju: '',\r\n        akun_id: this.state.akun_id,\r\n        vendor_id:'5e5deb9c2a448419e86f84a6',\r\n      },\r\n      refetchQueries:[{query:getPurchaseOrdersQuery}],\r\n    })\r\n    this.props.history.push(\"/purchaseOrder/buatPurchaseOrder\");\r\n  }\r\n\r\n  getKodeBaru(){\r\n    var kode = 'R';\r\n    var nomor = 1; \r\n    var data = this.props.getPurchaseOrdersQuery; // eslint-disable-next-line\r\n    data.purchaseOrders.map(order => {\r\n        nomor++;\r\n    })\r\n    if(nomor < 10){\r\n      kode = kode+\"00\"+nomor;\r\n    }else if (nomor >= 10 && nomor < 100){\r\n      kode = kode+\"0\"+nomor;\r\n    }else {\r\n      kode = kode+\"\"+nomor;\r\n    }\r\n    return kode;\r\n  }\r\n  render() {\r\n    if(this.state.loggedIn === false){\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                <Row>\r\n                <Col>\r\n                  Daftar Purchase Order\r\n                </Col>\r\n                <Col>\r\n                    <Button color=\"primary\" size=\"sm\"  className={'float-right mb-0'} onClick={this.addPurchaseOrder.bind(this)}>\r\n                        <i className=\"fa fa-plus\"></i> Buat Purchase Order\r\n                    </Button>\r\n                </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table hover bordered striped responsive size=\"sm\">\r\n                  <thead align=\"center\">\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Kode</th>\r\n                    <th>Nama Vendor</th>\r\n                    <th>Tanggal</th>\r\n                    <th>Status</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody align=\"center\">\r\n                  {this.displayAllPurchaseOrder()}\r\n                  </tbody>\r\n                </Table>\r\n                <nav>\r\n                  <Pagination>\r\n                    <PaginationItem><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\r\n                    <PaginationItem active>\r\n                      <PaginationLink tag=\"button\">1</PaginationLink>\r\n                    </PaginationItem>\r\n                    <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\r\n                    <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\r\n                    <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\r\n                    <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\r\n                  </Pagination>\r\n                </nav>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getPurchaseOrdersQuery, {name:\"getPurchaseOrdersQuery\"}),\r\n  graphql(addPurchaseOrderMutation, {name:\"addPurchaseOrderMutation\"}),\r\n) (PurchaseOrder);\r\n"],"sourceRoot":""}