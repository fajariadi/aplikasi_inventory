{"version":3,"sources":["views/Logistik/Profile/Profile.js","views/Logistik/queries/queries.js"],"names":["Profile","props","toggle","bind","state","username","password","karyawan_id","modalIsOpen","nama","localStorage","getItem","avatar","alamat","email","noHp","Array","fill","onDrop","picture","this","setState","pictures","concat","tabPane","tab","newArray","activeTab","slice","tabId","biodata","akun","md","kar_id","data","getDivisisQuery","loading","divisis","map","divisi","key","id","onClick","toggleModal","onDelete","getKaryawansQuery","karyawans","karyawan","jabatan","e","preventDefault","addUserMutation","variables","refetchQueries","query","className","xs","lg","src","alt","tabs","active","isOpen","onSubmit","addUser","htmlFor","type","name","onChange","target","value","required","color","Component","compose","graphql","addAkunMutation","getVendorsQuery","gql","getAlatsQuery","getRequestsQuery","getListRequestsQuery","getOrdersQuery","getBarangsQuery","addAlatMutation","addVendorMutation","addDivisiMutation","hapusDivisiMutation","addRequestMutation","hapusRequestMutation","addListRequestMutation","hapusManyListRequestMutation","addBarangMutation","getAkunQuery","getRequestQuery"],"mappings":"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","file":"static/js/85.6255c87b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {graphql} from 'react-apollo';\r\nimport * as compose from 'lodash.flowright';\r\nimport { getDivisisQuery, getKaryawansQuery, addAkunMutation} from '../queries/queries';\r\nimport {  \r\n  Card, \r\n  CardBody, \r\n  CardHeader,\r\n  CardFooter, \r\n  Col, \r\n  Button, \r\n  Row, \r\n  Table,\r\n  FormGroup,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  TabContent, TabPane, Nav, NavItem, NavLink\r\n} from 'reactstrap';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nclass Profile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      username:'',\r\n      password:'',\r\n      karyawan_id:'',\r\n      modalIsOpen: false,\r\n      nama: localStorage.getItem(\"nama\"),\r\n      avatar: localStorage.getItem(\"avatar\"),\r\n      alamat: localStorage.getItem(\"alamat\"),\r\n      email: localStorage.getItem(\"email\"),\r\n      noHp: localStorage.getItem(\"noHp\"),\r\n      username: localStorage.getItem(\"username\"),\r\n      password: localStorage.getItem(\"password\"),\r\n      activeTab: new Array(3).fill('1'),\r\n      pictures: [],\r\n    };\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  onDrop(picture) {\r\n        this.setState({\r\n            pictures: this.state.pictures.concat(picture),\r\n        });\r\n    }\r\n   toggle(tabPane, tab) {\r\n    const newArray = this.state.activeTab.slice()\r\n    newArray[tabPane] = tab\r\n    this.setState({\r\n      activeTab: newArray,\r\n    });\r\n  }\r\n\r\n   tabPane() {\r\n    return (\r\n      <>\r\n        <TabPane tabId=\"1\">\r\n          {this.biodata()}\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          {this.akun()}\r\n        </TabPane>\r\n      </>\r\n    );\r\n  }\r\n\r\n  biodata(){\r\n    return(\r\n      <div>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>Nama</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5>{this.state.nama}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>Tanggal Lahir</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5></h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>Jenis Kelamin</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5></h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>Alamat</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5>{this.state.alamat}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>No Telepon</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5>{this.state.noHp}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>Email</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5></h5>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  akun(){\r\n    return(\r\n      <div>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>Username</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5>{this.state.username}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md='2'>\r\n            <h5>password</h5>\r\n          </Col>\r\n          <Col md='1'>\r\n             <h5>:</h5>\r\n          </Col>\r\n          <Col md='4'>\r\n            <h5>{this.state.password}</h5>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  toggleModal(kar_id){\r\n    this.setState({\r\n      karyawan_id: kar_id\r\n    });\r\n    this.setState({\r\n      modalIsOpen: ! this.state.modalIsOpen\r\n    });\r\n  }\r\n\r\n  displayDivisis(){\r\n    var data = this.props.getDivisisQuery;\r\n    if(data.loading){\r\n      return (<div>Loading Divisi...</div>);\r\n    } else {\r\n      return data.divisis.map(divisi => {\r\n        return(\r\n          <tr>\r\n            <td key={divisi.id}>{divisi.nama}</td>\r\n            <td key={divisi.id}>\r\n             <Button onClick={this.toggleModal.bind(this, divisi.id)}>Edit</Button>\r\n            </td>\r\n            <td key={divisi.id}>\r\n              <Button onClick={this.onDelete.bind(this, divisi.id)}>Hapus</Button>\r\n            </td>\r\n\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  displayKaryawans(){\r\n    var data = this.props.getKaryawansQuery;\r\n    if(data.loading){\r\n      return (<div>Loading Divisi...</div>);\r\n    } else {\r\n      return data.karyawans.map(karyawan => {\r\n        return(\r\n          <tr>\r\n            <td key={karyawan.id}>{karyawan.nama}</td>\r\n            <td key={karyawan.id}>{karyawan.jabatan}</td>\r\n            <td key={karyawan.id}>{karyawan.alamat}</td>\r\n            <td key={karyawan.id}>{karyawan.noHp}</td>\r\n            <td key={karyawan.id}>{karyawan.avatar}</td>\r\n            <td key={karyawan.id}>{karyawan.divisi.nama}</td>\r\n            <td key={karyawan.id}>\r\n              <Button onClick={this.toggleModal.bind(this, karyawan.id)}>Buat Akun</Button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  addUser(e){\r\n   e.preventDefault();\r\n   var data = this.props.addUserMutation({\r\n      variables:{\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n        karyawan_id: this.state.karyawan_id,\r\n\r\n      },\r\n      refetchQueries:[{query:getKaryawansQuery}]\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xs=\"12\" lg=\"4\">\r\n            <Card>\r\n              <CardBody>\r\n                <center>\r\n                  <img src={'../../assets/img/avatars/5.jpg'} className=\"img-profile\" alt=\"admin@bootstrapmaster.com\" />\r\n                </center>\r\n              </CardBody>\r\n              <Button>\r\n                <center>\r\n                  <h5><i className=\"fa fa-pencil\"></i> Edit</h5>\r\n                </center>\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n          <Col xs=\"12\" lg=\"8\">          \r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  active={this.state.activeTab[0] === '1'}\r\n                  onClick={() => { this.toggle(0, '1'); }}\r\n                >\r\n                  Biodata\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  active={this.state.activeTab[0] === '2'}\r\n                  onClick={() => { this.toggle(0, '2'); }}\r\n                >\r\n                  Akun\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab[0]}>\r\n              {this.tabPane()}\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Modal isOpen={this.state.modalIsOpen}>\r\n          <ModalHeader>Form Tambah Barang</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={(e) => {this.addUser(e)}}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Username</Label>\r\n                <Input type=\"text\" name=\"username\" onChange={(e) =>this.setState({username:e.target.value})} id=\"nama\" required></Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Passwor</Label>\r\n                <Input type=\"password\" name=\"password\" onChange={(e) =>this.setState({password:e.target.value})} id=\"nama\" required></Input>\r\n              </FormGroup>\r\n              <Button type=\"submit\" color=\"primary\">Tambah</Button>\r\n              <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Batal</Button>\r\n            </Form>\r\n          </ModalBody>  \r\n        </Modal>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getDivisisQuery, {name:\"getDivisisQuery\"}),\r\n  graphql(addAkunMutation, {name:\"addAkunMutation\"}),\r\n  graphql(getKaryawansQuery, {name:\"getKaryawansQuery\"})\r\n)(Profile);\r\n","import {gql} from 'apollo-boost';\r\n\r\nconst getVendorsQuery = gql`\r\n{\r\n\tvendors {\r\n\t\tnama\r\n\t\tjenis_usaha\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\nconst getAlatsQuery = gql`\r\n{\r\n\talats {\r\n\t\tnama\r\n\t\tjumlah\r\n\t\tid\r\n\t}\r\n}\r\n`\r\nconst getDivisisQuery = gql`\r\n{\r\n\tdivisis {\r\n\t\tnama\r\n\t\tid\r\n\t}\r\n}\r\n`\r\nconst getRequestsQuery = gql`\r\n{\r\n\trequests {\r\n\t\ttanggal\r\n\t\tstatus\r\n\t\tid\r\n\t\tdivisi{\r\n\t\t\tnama\r\n\t\t}\r\n\t}\r\n}\r\n`\r\nconst getListRequestsQuery = gql`\r\n{\r\n\tlistrequests {\r\n\t\tnama_barang\r\n\t\tjumlah_barang\r\n\t\tjenis\r\n\t\tsatuan\r\n\t\tid\r\n\t\trequest{\r\n\t\t\tstatus\r\n\t\t\ttanggal\r\n\t\t\tdivisi{\r\n\t\t\t\tnama\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n`\r\n\r\nconst getOrdersQuery = gql`\r\n{\r\n\torders {\r\n\t\tkode\r\n\t\ttanggal\r\n\t\tjenis\r\n\t\tstatus\r\n\t\tid\r\n\t\tvendor{\r\n\t\t\tnama\r\n\t\t\tjenis_usaha\r\n\t\t}\r\n\t}\r\n}\r\n`\r\n\r\nconst getBarangsQuery = gql`\r\n{\r\n\tbarangs {\r\n\t\tnama_barang\r\n\t\tjenis_barang\r\n\t\tsatuan\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\nconst getKaryawansQuery = gql`\r\n{\r\n\tkaryawans {\r\n\t\tnama\r\n\t\tjabatan\r\n\t\talamat\r\n\t\tnoHp\r\n\t\tavatar\r\n\t\tdivisi{\r\n\t\t\tnama\r\n\t\t}\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\nconst addAlatMutation = gql`\r\n\tmutation($nama:String!, $jumlah:Int!){\r\n\t\taddAlat(nama: $nama, jumlah: $jumlah){\r\n\t\t\tnama\r\n\t\t\tjumlah\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addVendorMutation = gql`\r\n\tmutation($nama:String!, $jenis_usaha:String!){\r\n\t\taddVendor(nama: $nama, jenis_usaha: $jenis_usaha){\r\n\t\t\tnama\r\n\t\t\tjenis_usaha\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addDivisiMutation = gql`\r\n\tmutation($nama:String!){\r\n\t\taddDivisi(nama: $nama){\r\n\t\t\tnama\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst hapusDivisiMutation = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusDivisi(id: $id){\r\n\t\t\tnama\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addRequestMutation = gql`\r\n\tmutation($tanggal:String!, $status:String!, $divisi_id: ID!){\r\n\t\taddRequest(tanggal: $tanggal, status: $status, divisi_id: $divisi_id){\r\n\t\t\ttanggal\r\n\t\t\tstatus\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\nconst hapusRequestMutation = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusRequest(id: $id){\r\n\t\t\tstatus\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addListRequestMutation = gql`\r\n\tmutation($nama_barang:String!, $jumlah_barang:Int!, $satuan:String!, $jenis:String!, $request_id: ID!){\r\n\t\taddListRequest(nama_barang: $nama_barang, jumlah_barang: $jumlah_barang, satuan:$satuan, jenis:$jenis, request_id: $request_id){\r\n\t\t\tnama_barang\r\n\t\t\tjumlah_barang\r\n\t\t\tsatuan\r\n\t\t\tjenis\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\nconst hapusManyListRequestMutation = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusManyListRequest(id: $id){\r\n\t\t\tnama_barang\r\n\t\t\tjumlah_barang\r\n\t\t\tsatuan\r\n\t\t\tjenis\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst hapusListRequestMutation = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusListRequest(id: $id){\r\n\t\t\tnama_barang\r\n\t\t\tjumlah_barang\r\n\t\t\tsatuan\r\n\t\t\tjenis\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addBarangMutation = gql`\r\n\tmutation($nama_barang:String!, $jenis_barang:String!, $satuan:String!){\r\n\t\taddBarang(nama_barang: $nama_barang, jenis_barang: $jenis_barang, satuan:$satuan){\r\n\t\t\tnama_barang\r\n\t\t\tjenis_barang\r\n\t\t\tsatuan\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addAkunMutation = gql`\r\n\tmutation($username:String!, $password:String!, $karyawan_id:ID!){\r\n\t\taddAkun(username: $username, password: $password, karyawan_id:$karyawan_id){\r\n\t\t\tusername\r\n\t\t\tpassword\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst getAkunQuery = gql`\r\n\tquery($username: String!, $password: String!){\r\n\t\takun(username: $username, password: $password) {\r\n\t\t\tusername\r\n\t\t\tpassword\r\n\t\t\tkaryawan{\r\n\t\t\t\tnama\r\n\t\t\t\tjabatan\r\n\t\t\t\talamat\r\n\t\t\t\tnoHp\r\n\t\t\t\tavatar\r\n\t\t\t\tid\r\n\t\t\t\tdivisi{\r\n\t\t\t\t\tnama\r\n\t\t\t\t\tid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst getBarangQuery = gql`\r\n\tquery($id: ID){\r\n\t\tbarang(id: $id) {\r\n\t\t\tnama_barang\r\n\t\t\tjenis_barang\r\n\t\t\tsatuan\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst getRequestQuery = gql`\r\n\tquery($id:ID){\r\n\t\trequest(id: $id) {\r\n\t\t\ttanggal\r\n\t\t\tstatus\r\n\t\t\tid\r\n\t\t\tdivisi{\r\n\t\t\t\tnama\r\n\t\t\t}\r\n\t\t\tlistRequest{\r\n\t\t\t\tnama_barang\r\n\t\t\t\tjumlah_barang\r\n\t\t\t\tjenis\r\n\t\t\t\tsatuan\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\n\r\nexport {\r\n\tgetVendorsQuery, \r\n\tgetAlatsQuery,\r\n\tgetDivisisQuery,\r\n\tgetRequestsQuery,\r\n\tgetRequestQuery,\r\n\tgetListRequestsQuery,\r\n\tgetOrdersQuery,\r\n\tgetBarangsQuery,\r\n\tgetBarangQuery,\r\n\taddDivisiMutation, \r\n\taddAlatMutation, \r\n\taddVendorMutation,\r\n\taddRequestMutation,\r\n\taddListRequestMutation,\r\n\taddBarangMutation,\r\n\thapusDivisiMutation,\r\n\thapusRequestMutation,\r\n\thapusListRequestMutation,\r\n\tgetKaryawansQuery,\r\n\taddAkunMutation,\r\n\tgetAkunQuery,\r\n\thapusManyListRequestMutation\r\n};"],"sourceRoot":""}