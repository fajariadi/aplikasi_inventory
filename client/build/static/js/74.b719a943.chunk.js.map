{"version":3,"sources":["views/Logistik/Barang/EditBarang.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js"],"names":["EditBarang","props","state","id","nama_barang","jenis_barang","satuan","harga","modalIsOpen","this","setState","e","barang","data","nama","jenis","sat","har","updateBarangMutation","variables","match","params","parseInt","refetchQueries","query","getBarangsQuery","Swal","fire","position","icon","title","showConfirmButton","htmlFor","type","defaultValue","onChange","target","value","required","name","className","to","label","color","displayBarang","onClick","submitForm","Component","compose","graphql","getBarangQuery","options","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","CardHeader","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","inverse","bool","body","outline","innerRef","oneOfType","func","Card","ref","CardBody"],"mappings":"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","file":"static/js/74.b719a943.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {graphql} from 'react-apollo';\r\nimport * as compose from 'lodash.flowright';\r\nimport Swal from 'sweetalert2';\r\nimport {getBarangQuery, updateBarangMutation, getBarangsQuery} from '../queries/queries';\r\nimport { \r\n  Card, \r\n  CardBody, \r\n  CardHeader, \r\n  Col, \r\n  Row,  \r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form,\r\n} from 'reactstrap';\r\n\r\nclass EditBarang extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id:'',\r\n      nama_barang:'',\r\n      jenis_barang: '',\r\n      satuan: '',\r\n      harga: '',\r\n      modalIsOpen: false,  \r\n    };\r\n  }\r\n\r\n  toggleModal(){\r\n    this.setState({\r\n      modalIsOpen: ! this.state.modalIsOpen\r\n    });\r\n  }\r\n\r\n  submitForm(e){\r\n    const {barang} = this.props.data;\r\n    var nama='';\r\n    var jenis='';\r\n    var sat='';\r\n    var har=0;\r\n    if (this.state.nama_barang === ''){\r\n      nama = barang.nama_barang\r\n    } else {\r\n      nama = this.state.nama_barang\r\n    }\r\n    if (this.state.jenis_barang === ''){\r\n      jenis = barang.jenis_barang\r\n    } else {\r\n      jenis = this.state.jenis_barang\r\n    }\r\n    if (this.state.satuan === ''){\r\n      sat = barang.satuan \r\n    } else {\r\n      sat = this.state.satuan \r\n    }\r\n    if (this.state.harga === 0){\r\n      har = barang.harga\r\n    } else {\r\n      har = this.state.harga\r\n    }\r\n    this.props.updateBarangMutation({\r\n      variables:{\r\n        id:this.props.match.params.id,\r\n        nama_barang: nama,\r\n        jenis_barang: jenis,\r\n        satuan: sat,\r\n        harga: parseInt(har),\r\n      },\r\n      refetchQueries:[{query:getBarangsQuery}],\r\n    });\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Barang Berhasil Diubah',\r\n      showConfirmButton: true,\r\n    })\r\n  }\r\n\r\n  displayBarang(){\r\n    const {barang} = this.props.data;\r\n    if(barang){\r\n       return(\r\n         <div>\r\n           <FormGroup>\r\n                <Label htmlFor=\"name\">Nama Barang</Label>\r\n                <Input type=\"text\" id=\"name\" defaultValue={barang.nama_barang} onChange={(e) =>this.setState({nama_barang:e.target.value})} required />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label htmlFor=\"name\">Jenis Barang</Label>\r\n                <Input type=\"text\" id=\"jenis\" defaultValue={barang.jenis_barang} onChange={(e) =>this.setState({jenis_barang:e.target.value})}  required />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label htmlFor=\"name\">Satuan</Label>\r\n                <Input type=\"select\" name=\"satuan\" id=\"satuan\" defaultValue={barang.satuan} onChange={(e) =>this.setState({satuan:e.target.value})} >\r\n                    <option>Satuan</option>\r\n                    <option value=\"Kg\">Kg</option>\r\n                    <option value=\"Buah\">Buah</option>\r\n                    <option value=\"Meter\">Meter</option>\r\n                    <option value=\"Lembar\">Lembar</option>\r\n                    <option value=\"Liter\">Liter</option>\r\n                    <option value=\"Sak\">Sak</option>\r\n                    <option value=\"m2\">m2</option>\r\n                    <option value=\"m3\">m3</option>\r\n                    <option value=\"Roll\">Roll</option>\r\n                    <option value=\"Kardus\">Kardus</option>\r\n                    <option value=\"Batang\">Batang</option>\r\n                    <option value=\"Truk\">Truk</option>\r\n                    <option value=\"Drum\">Drum</option>\r\n                    <option value=\"Takaran\">Takaran</option>\r\n                </Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                <Label htmlFor=\"name\">Harga Barang</Label>\r\n                <Input type=\"number\" id=\"harga\" defaultValue={barang.harga} onChange={(e) =>this.setState({harga:e.target.value})}  required />\r\n                </FormGroup>\r\n         </div>\r\n       )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                <i className=\"fa fa-align-justify\"></i> Form Edit Data Barang\r\n                <Link to=\"/barang/barang\" className={'float-right mb-0'}> \r\n                  <Button label color=\"primary\">\r\n                      Kembali\r\n                  </Button>\r\n                </Link>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                {this.displayBarang()}\r\n                <Link to=\"/barang/barang\">\r\n                  <Button type=\"submit\" color=\"primary\" onClick={(e) => {this.submitForm(e)}} >Submit</Button>\r\n                </Link>\r\n                <Link to=\"/barang/barang\">\r\n                  <Button color=\"danger\">Batal</Button>\r\n                </Link>\r\n            </Form>\r\n                </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    graphql(getBarangQuery, {\r\n        options:(props) => {\r\n          return{\r\n            variables:{\r\n              id: props.match.params.id\r\n            }\r\n          }\r\n        }\r\n      }),\r\n  graphql(updateBarangMutation, {name:\"updateBarangMutation\"}),\r\n  graphql(getBarangsQuery, {name:\"getBarangsQuery\"})\r\n)(EditBarang);\r\n\r\n\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}