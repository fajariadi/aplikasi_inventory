{"version":3,"sources":["views/Logistik/DashboardLogistik/DashboardLogistik.js"],"names":["brandPrimary","getStyle","brandInfo","cardChartData1","labels","datasets","label","backgroundColor","borderColor","data","cardChartOpts1","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","legend","display","scales","xAxes","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","cardChartData2","cardChartOpts2","tension","cardChartData3","cardChartOpts3","cardChartData4","cardChartOpts4","barPercentage","DashboardLogistik","props","loggedIn","localStorage","getItem","state","nama","this","getPermintaanBarangsQuery","jumlah","loading","undefined","permintaanBarangs","map","permintaan","getPurchaseOrdersQuery","purchaseOrders","order","getPersediaanBarangsQuery","persediaanBarangs","persediaan","getAllInventarisQuery","allInventaris","inventaris","getPenerimaanBarangsQuery","no","penerimaanBarangs","request","key","id","kode","tanggal","purchaseOrder","vendor","window","location","reload","getPengeluaranBarangsQuery","pengeluaranBarangs","pengeluaran","permintaanBarang","akun","karyawan","divisi","to","className","xs","sm","lg","getPermintaanBarang","style","height","options","getPurchaseOrder","getPersediaanBarang","getInventaris","responsive","align","displayPenerimaanBarang","displayPengeluaranBarang","Component","compose","graphql","name"],"mappings":"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","file":"static/js/47.f5eb0dd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport {graphql} from 'react-apollo';\r\nimport * as compose from 'lodash.flowright';\r\nimport {getPermintaanBarangsQuery,  getAllInventarisQuery, getPurchaseOrdersQuery, getPersediaanBarangsQuery, getPenerimaanBarangsQuery, getPengeluaranBarangsQuery} from '../queries/queries';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Table,\r\n  CardBody,\r\n  Col,\r\n  \r\n  Row,\r\n\r\n\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\r\nimport { getStyle } from '@coreui/coreui/dist/js/coreui-utilities';\r\n\r\n\r\nconst brandPrimary = getStyle('--primary')\r\nconst brandInfo = getStyle('--info')\r\n// Card Chart 1\r\nconst cardChartData1 = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: brandPrimary,\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [65, 59, 84, 84, 51, 55, 40],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts1 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: 'transparent',\r\n          zeroLineColor: 'transparent',\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: 'transparent',\r\n        },\r\n\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5,\r\n        },\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 1,\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n    },\r\n  }\r\n}\r\n\r\n\r\n// Card Chart 2\r\nconst cardChartData2 = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: brandInfo,\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [1, 18, 9, 17, 34, 22, 11],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts2 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: 'transparent',\r\n          zeroLineColor: 'transparent',\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: 'transparent',\r\n        },\r\n\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData2.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData2.datasets[0].data) + 5,\r\n        },\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      tension: 0.00001,\r\n      borderWidth: 1,\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n    },\r\n  },\r\n};\r\n\r\n// Card Chart 3\r\nconst cardChartData3 = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: 'rgba(255,255,255,.2)',\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [78, 81, 80, 45, 34, 12, 40],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts3 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 2,\r\n    },\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n    },\r\n  },\r\n};\r\n\r\n// Card Chart 4\r\nconst cardChartData4 = {\r\n  labels: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: 'rgba(255,255,255,.3)',\r\n      borderColor: 'transparent',\r\n      data: [78, 81, 80, 45, 34, 12, 40, 75, 34, 89, 32, 68, 54, 72, 18, 98],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts4 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n        barPercentage: 0.6,\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n  },\r\n};\r\n\r\nclass DashboardLogistik extends Component {\r\n   constructor(props){\r\n    super(props);\r\n    const username= localStorage.getItem(\"username\")\r\n\r\n    let loggedIn = true \r\n      if(username == null){\r\n        loggedIn = false\r\n      }\r\n    this.state = {\r\n      nama: localStorage.getItem(\"nama\"),\r\n      loggedIn\r\n    }\r\n  }\r\n\r\n  getPermintaanBarang(){\r\n    const data = this.props.getPermintaanBarangsQuery;\r\n    var jumlah = 0;\r\n    if(data.loading){\r\n      return (<div>Loading Permintaan...</div>);\r\n    } else { \r\n      if (data.permintaanBarangs !== undefined) {// eslint-disable-next-line\r\n        data.permintaanBarangs.map(permintaan => {\r\n          jumlah++\r\n        })\r\n      } else {\r\n        jumlah = 0;\r\n      }\r\n    }\r\n    return jumlah;\r\n  }\r\n\r\n  getPurchaseOrder(){\r\n    const data = this.props.getPurchaseOrdersQuery;\r\n    var jumlah = 0;\r\n    if(data.loading){\r\n      return (<div>Loading Pembelian...</div>);\r\n    } else {\r\n      if (data.purchaseOrders !== undefined){ // eslint-disable-next-line\r\n        data.purchaseOrders.map(order => {\r\n          jumlah++\r\n        })\r\n      } else {\r\n        jumlah = 0;\r\n      }\r\n    } \r\n    return jumlah;\r\n  }\r\n\r\n  getPersediaanBarang(){\r\n   const data = this.props.getPersediaanBarangsQuery;\r\n    var jumlah = 0;\r\n    if(data.loading){\r\n      return (<div>Loading Persediaan...</div>);\r\n    } else {\r\n      if (data.persediaanBarangs !== undefined){// eslint-disable-next-line\r\n        data.persediaanBarangs.map(persediaan => {\r\n          jumlah++\r\n        })\r\n      } else {\r\n        jumlah = 0;\r\n      }\r\n    } \r\n    return jumlah;\r\n  }\r\n\r\n  getInventaris(){\r\n    const data = this.props.getAllInventarisQuery;\r\n    var jumlah = 0;\r\n    if(data.loading){\r\n      return (<div>Loading Inventaris...</div>);\r\n    } else {\r\n      if (data.allInventaris !== undefined){// eslint-disable-next-line\r\n        data.allInventaris.map(inventaris => {\r\n          jumlah++\r\n        })\r\n      }else {\r\n       jumlah = 0;\r\n      }\r\n    } \r\n    return jumlah;\r\n  }\r\n \r\n  displayPenerimaanBarang(){\r\n    const data = this.props.getPenerimaanBarangsQuery;\r\n    var no = 0;\r\n    if(data.loading){\r\n      return\r\n    } else  { \r\n      if (data.penerimaanBarangs !== undefined){// eslint-disable-next-line\r\n        return data.penerimaanBarangs.map(request => {\r\n          no++;\r\n          if (no < 6){\r\n            return(\r\n              <tr key={request.id}>\r\n                <td>{no}</td>\r\n                <td>{request.kode}</td>\r\n                <td>{request.tanggal}</td>\r\n                <td>{request.purchaseOrder.vendor.nama}</td>\r\n              </tr>\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        window.location.reload(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  displayPengeluaranBarang(){\r\n    const data = this.props.getPengeluaranBarangsQuery;\r\n    var no = 0;\r\n    if(data.loading){\r\n      return\r\n    } else{ \r\n      if ( data.pengeluaranBarangs !== undefined){ // eslint-disable-next-line\r\n        return data.pengeluaranBarangs.map(pengeluaran => {\r\n          no++;\r\n          if (no < 6){\r\n            return(\r\n              <tr key={pengeluaran.id}>\r\n                <td>{no}</td>\r\n                <td>{pengeluaran.kode}</td>\r\n                <td>{pengeluaran.tanggal}</td>\r\n                <td>{pengeluaran.permintaanBarang.akun.karyawan.divisi.nama}</td>\r\n              </tr>\r\n            );\r\n          }\r\n        });\r\n      }else {\r\n        window.location.reload(false);\r\n      }\r\n    } \r\n  }\r\n\r\n  render() {\r\n    if(this.state.loggedIn === false){\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-info\">\r\n              <CardBody className=\"pb-0\">\r\n                <div className=\"text-value\">{this.getPermintaanBarang()}</div> \r\n                <div>Permintaan Barang</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\r\n                <Line data={cardChartData2} options={cardChartOpts2} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n           <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-warning\">\r\n              <CardBody className=\"pb-0\">\r\n                <div className=\"text-value\">{this.getPurchaseOrder()}</div>\r\n                <div>Purchase Order</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper\" style={{ height: '70px' }}>\r\n                <Line data={cardChartData3} options={cardChartOpts3} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-primary\">\r\n              <CardBody className=\"pb-0\">\r\n                <div className=\"text-value\">{this.getPersediaanBarang()}</div>\r\n                <div>Persediaan Barang</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\r\n                <Line data={cardChartData1} options={cardChartOpts1} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-success\">\r\n              <CardBody className=\"pb-0\">\r\n                <div className=\"text-value\">{this.getInventaris()}</div>\r\n                <div>Inventaris</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\r\n                <Bar data={cardChartData4} options={cardChartOpts4} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\" lg=\"6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <i className=\"fa fa-align-justify\"></i> Daftar Penerimaan Barang\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table responsive>\r\n                  <thead align=\"center\">\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Kode</th>\r\n                    <th>Tanggal</th>\r\n                    <th>Vendor</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody align=\"center\">\r\n                    {this.displayPenerimaanBarang()}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col xs=\"12\" lg=\"6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <i className=\"fa fa-align-justify\"></i> Daftar Pengeluaran Barang\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table responsive>\r\n                  <thead align=\"center\">\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Kode</th>\r\n                    <th>Tanggal</th>\r\n                    <th>Divisi</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody align=\"center\">\r\n                    {this.displayPengeluaranBarang()}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getPermintaanBarangsQuery, {name:\"getPermintaanBarangsQuery\"}),\r\n  graphql(getPurchaseOrdersQuery, {name:\"getPurchaseOrdersQuery\"}),\r\n  graphql(getPersediaanBarangsQuery, {name:\"getPersediaanBarangsQuery\"}),\r\n  graphql(getAllInventarisQuery, {name:\"getAllInventarisQuery\"}),\r\n  graphql(getPenerimaanBarangsQuery, {name:\"getPenerimaanBarangsQuery\"}),\r\n  graphql(getPengeluaranBarangsQuery, {name:\"getPengeluaranBarangsQuery\"}),\r\n  \r\n)(DashboardLogistik);\r\n"],"sourceRoot":""}